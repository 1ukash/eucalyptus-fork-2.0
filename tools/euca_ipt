#!/usr/bin/perl
#Copyright (c) 2009  Eucalyptus Systems, Inc.	
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by 
#the Free Software Foundation, only version 3 of the License.  
# 
#This file is distributed in the hope that it will be useful, but WITHOUT
#ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#for more details.  
#
#You should have received a copy of the GNU General Public License along
#with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
#Please contact Eucalyptus Systems, Inc., 130 Castilian
#Dr., Goleta, CA 93101 USA or visit <http://www.eucalyptus.com/licenses/> 
#if you need additional information or have any questions.
#
#This file may incorporate work covered under the following copyright and
#permission notice:
#
#  Software License Agreement (BSD License)
#
#  Copyright (c) 2008, Regents of the University of California
#  
#
#  Redistribution and use of this software in source and binary forms, with
#  or without modification, are permitted provided that the following
#  conditions are met:
#
#    Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
#    Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
#  OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. USERS OF
#  THIS SOFTWARE ACKNOWLEDGE THE POSSIBLE PRESENCE OF OTHER OPEN SOURCE
#  LICENSED MATERIAL, COPYRIGHTED MATERIAL OR PATENTED MATERIAL IN THIS
#  SOFTWARE, AND IF ANY SUCH MATERIAL IS DISCOVERED THE PARTY DISCOVERING
#  IT MAY INFORM DR. RICH WOLSKI AT THE UNIVERSITY OF CALIFORNIA, SANTA
#  BARBARA WHO WILL THEN ASCERTAIN THE MOST APPROPRIATE REMEDY, WHICH IN
#  THE REGENTSâ€™ DISCRETION MAY INCLUDE, WITHOUT LIMITATION, REPLACEMENT
#  OF THE CODE SO IDENTIFIED, LICENSING OF THE CODE SO IDENTIFIED, OR
#  WITHDRAWAL OF THE CODE CAPABILITY TO THE EXTENT NEEDED TO COMPLY WITH
#  ANY SUCH LICENSES OR RIGHTS.
#

delete @ENV{qw(IFS CDPATH ENV BASH_ENV)};
$ENV{'PATH'}='/bin:/usr/bin:/sbin:/usr/sbin/';

$table = shift @ARGV;
if ($table =~ /^([ &:#-\@\w.]+)$/) {
    $table = $1; #data is now untainted
} else {
    exit(1);
}

$rulefile = shift @ARGV;
if ($rulefile =~ /^([ &:#-\@\w.]+)$/) {
    $rulefile = $1; #data is now untainted
} else {
    exit(1);
}

if (!$table || !$rulefile || !($table eq "filter" || $table eq "nat") || $rulefile eq "" || !-f $rulefile) {exit 1;}

@workingfiles = ("$rulefile.orig", "$rulefile.new");

open my $fh, '-|' or exec 'iptables-save', ("-t", "$table") or dodie ("iptables-save failed: $!\n");
open(OFH, ">$rulefile.orig") or dodie ("cannot open $rulefile.orig");
$outbuf = "";
while(<$fh>) {
    chomp;
    my $line = $_;
    $line =~ s/\s+$//g;
    $line =~ s/^\s+//g;
    print OFH "$line\n";
}
close($fh) || dodie ("iptables-save failed\n");
close(OFH);

$added=0;
$outbuf = "";
open(FH, "$rulefile.orig");
while(<FH>) {
    chomp;
    my $line = $_;
    $line =~ s/\s+$//g;
    $line =~ s/^\s+//g;
    if ($line eq "COMMIT") {
	# time to load the input rules
	open (RFH, "$rulefile");
	while(<RFH>) {
	    chomp;
	    my $line = $_;
	    $line =~ s/\s+$//g;
	    $line =~ s/^\s+//g;
	    if ($line ne "" && !$rulehash{$line}) {
		$buf .= "$line\n";
		$rulehash{$line} = 1;
		$added=1;
	    }
	}
	close(RFH);	
    }
    if ($line ne "" && !$rulehash{$line}) {
	$buf .= "$line\n";
	$rulehash{$line} = 1;
    }
}
close(FH);

if (!$added) {
    doexit(0);
}

open (OFH, ">$rulefile.new");
print OFH "$buf\n";
close(OFH);
if (!-f "$rulefile.new") {
    dodie("cannot find $rulefile.new");
}


open my $fh, '|-' or exec 'iptables-restore' or dodie( "iptables-restore failed: $!\n");
open(IFH, "$rulefile.new") or dodie( "cannot open $rulefile.new");
while(<IFH>) {
    print $fh "$_";
}
close($fh) || dodie( "iptables-restore failed\n");
close(IFH);

doexit(0);

sub doexit {
    $ret = shift @_;
    $msg = shift @_;
    if ($msg) {
	print STDERR "$msg\n";
    }

    for ($i=0; $i<@workingfiles; $i++) {
	if ( -f "$workingfiles[$i]" ) {
	    unlink("$workingfiles[$i]");
	}
    }

    exit($ret);
}    

sub dodie {
    $msg = shift @_;
    doexit(1, "$msg");
}
