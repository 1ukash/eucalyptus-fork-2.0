<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (c) 2009  Eucalyptus Systems, Inc.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, only version 3 of the License.
  ~
  ~
  ~ This file is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  ~ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along
  ~ with this program.  If not, see http://www.gnu.org/licenses/.
  ~
  ~ Please contact Eucalyptus Systems, Inc., 130 Castilian
  ~ Dr., Goleta, CA 93101 USA or visit http://www.eucalyptus.com/licenses/
  ~ if you need additional information or have any questions.
  ~
  ~ This file may incorporate work covered under the following copyright and
  ~ permission notice:
  ~
  ~   Software License Agreement (BSD License)
  ~
  ~   Copyright (c) 2008, Regents of the University of California
  ~   All rights reserved.
  ~
  ~   Redistribution and use of this software in source and binary forms, with
  ~   or without modification, are permitted provided that the following
  ~   conditions are met:
  ~
  ~     Redistributions of source code must retain the above copyright notice,
  ~     this list of conditions and the following disclaimer.
  ~
  ~     Redistributions in binary form must reproduce the above copyright
  ~     notice, this list of conditions and the following disclaimer in the
  ~     documentation and/or other materials provided with the distribution.
  ~
  ~   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
  ~   IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  ~   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  ~   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
  ~   OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  ~   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  ~   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  ~   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  ~   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  ~   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  ~   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. USERS OF
  ~   THIS SOFTWARE ACKNOWLEDGE THE POSSIBLE PRESENCE OF OTHER OPEN SOURCE
  ~   LICENSED MATERIAL, COPYRIGHTED MATERIAL OR PATENTED MATERIAL IN THIS
  ~   SOFTWARE, AND IF ANY SUCH MATERIAL IS DISCOVERED THE PARTY DISCOVERING
  ~   IT MAY INFORM DR. RICH WOLSKI AT THE UNIVERSITY OF CALIFORNIA, SANTA
  ~   BARBARA WHO WILL THEN ASCERTAIN THE MOST APPROPRIATE REMEDY, WHICH IN
  ~   THE REGENTSâ€™ DISCRETION MAY INCLUDE, WITHOUT LIMITATION, REPLACEMENT
  ~   OF THE CODE SO IDENTIFIED, LICENSING OF THE CODE SO IDENTIFIED, OR
  ~   WITHDRAWAL OF THE CODE CAPABILITY TO THE EXTENT NEEDED TO COMPLY WITH
  ~   ANY SUCH LICENSES OR RIGHTS.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Author: chris grzegorczyk  grze@eucalyptus.com
  -->
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:spring="http://www.springframework.org/schema/beans" xmlns:euca="http://www.eucalyptus.com/schema/cloud/1.6"
  xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0" xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd
       http://www.eucalyptus.com/schema/cloud/1.6 http://www.eucalyptus.com/schema/cloud/1.6/euca.xsd">
  <mule:configuration>
    <mule:default-threading-profile doThreading="true" maxThreadsActive="16" poolExhaustedAction="RUN" />
  </mule:configuration>
   <euca:connector name="eucaws" />
  <vm:connector name="internal-async" queueEvents="false" >
    <vm:queueProfile persistent="false" maxOutstandingMessages="256"/>
  </vm:connector> 
  <endpoint name="ReplyQueueEndpoint" address="vm://ReplyQueue" synchronous="false" />  
  <endpoint name="RequestQueueEndpoint" address="vm://RequestQueue" synchronous="false" />
  <endpoint name="EucalyptusRequestQueueEndpoint" address="vm://EucalyptusRequestQueue" synchronous="false" />
  <endpoint name="WalrusRequestQueueEndpoint" address="vm://WalrusRequestQueue" synchronous="false" />
  <endpoint name="StorageRequestQueueEndpoint" address="vm://StorageRequestQueue" synchronous="false" />
  <endpoint name="ComponentRequestQueueEndpoint" address="vm://ComponentRequestQueue" synchronous="false" />
  <model name="eucalyptus-bootstrap">
    <default-service-exception-strategy>
      <outbound-endpoint ref="ReplyQueueEndpoint" />
    </default-service-exception-strategy>
    <service name="ReplyQueue">
      <inbound>
        <inbound-endpoint ref="ReplyQueueEndpoint" />
      </inbound>
      <component class="com.eucalyptus.ws.util.ReplyQueue" />
    </service>
    <service name="RequestQueue">
      <inbound>
        <inbound-endpoint ref="RequestQueueEndpoint" />
      </inbound>
      <component class="com.eucalyptus.ws.util.RequestQueue" />
      <outbound>
        <filtering-router>
          <outbound-endpoint ref="WalrusRequestQueueEndpoint" synchronous="false" />
          <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.WalrusRequestType" />
        </filtering-router>
        <filtering-router>
          <outbound-endpoint ref="StorageRequestQueueEndpoint" synchronous="false" />
          <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.StorageRequestType" />
        </filtering-router>
        <filtering-router>
          <outbound-endpoint ref="EucalyptusRequestQueueEndpoint" synchronous="false" />
          <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.EucalyptusMessage" />
        </filtering-router>
        <filtering-router>
          <outbound-endpoint ref="ComponentRequestQueueEndpoint" synchronous="false" />
          <payload-type-filter expectedType="edu.ucsb.eucalyptus.msgs.ComponentMessageType" />
        </filtering-router>
      </outbound>
    </service>
  </model>
</mule>
